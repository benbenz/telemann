# Generated by Django 5.0 on 2024-02-15 17:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tags', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='SoundBite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('parameters', models.JSONField(help_text='Parameters for this specific soundbite (generator(if+processor parameters)')),
                ('file_path', models.FilePathField(help_text='File path of the waveform', max_length=512)),
                ('last_modified', models.DateTimeField(default=None, help_text='the date/time the file was modified', null=True)),
                ('record_date', models.DateTimeField(auto_now_add=True, help_text='the date/time the file was entered in the database')),
            ],
            options={
                'ordering': ['record_date'],
            },
        ),
        migrations.CreateModel(
            name='SoundGenerator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('recording', 'Recording'), ('instrument', 'Instrument'), ('artist', 'Artist')], default='instrument', help_text='Type of generator', max_length=16)),
                ('name', models.CharField(help_text='The name of the sound generator', max_length=64)),
                ('description', models.TextField(default=None, max_length=256, null=True)),
                ('filenames', models.TextField(default=None, help_text='The list of possible file names for the plugin', max_length=256, null=True)),
                ('file_path', models.FilePathField(default=None, help_text='File path for the plugin', max_length=512, null=True)),
                ('audio_device_name', models.CharField(default=None, help_text='Audio input device', max_length=64, null=True)),
                ('audio_device_channels', models.JSONField(default=[1, 2], help_text='Audio input channels', null=True)),
                ('audio_device_samplerate', models.PositiveSmallIntegerField(default=44100, help_text='Audio input sample rate')),
                ('audio_device_kernelsize', models.PositiveSmallIntegerField(default=256, help_text='Audio input kernel size')),
                ('audio_device_sample_format', models.SmallIntegerField(default=16, help_text='Audio input resolution')),
                ('midi_out_port_name', models.CharField(default=None, help_text='MIDI OUT port name', max_length=64, null=True)),
                ('midi_in_port_name', models.CharField(default=None, help_text='MIDI IN port name', max_length=64, null=True)),
                ('midi_channel', models.PositiveSmallIntegerField(default=None, help_text='MIDI channel', null=True)),
                ('parameters', models.JSONField(help_text='Extra Parameters for this generator')),
            ],
        ),
        migrations.CreateModel(
            name='SoundProcessor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of the sound processor', max_length=64)),
                ('description', models.TextField(default=None, max_length=256, null=True)),
                ('filenames', models.TextField(default=None, help_text='The list of possible file names for the plugin', max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SoundSource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('unknown', 'Unknown'), ('voice', 'Voice'), ('instrument', 'Instrument'), ('effect', 'Effect'), ('soundfx', 'Sound Fx')], default='unknown', help_text='Type of sound', max_length=16)),
                ('nature', models.CharField(choices=[('unknown', 'Unknown'), ('natural', 'Natural'), ('accoustic', 'Accoustic'), ('electric', 'Electric'), ('elec_acc', 'Elec Acc'), ('electronic', 'Electronic'), ('analog', 'Analog'), ('digital', 'Digital'), ('neural', 'Neural')], default='unknown', help_text='The Nature of the sound', max_length=16)),
                ('category', models.CharField(choices=[('unknown', 'Unknown'), ('voice', 'Voice'), ('bass', 'Bass'), ('lead', 'Lead'), ('piano', 'Piano'), ('keyboard', 'Keyboard'), ('string', 'String'), ('ensemble', 'Ensemble'), ('wind', 'Wind'), ('brass', 'Brass'), ('synth', 'Synth'), ('drone', 'Drone'), ('drum', 'Drum'), ('percussion', 'Percussion'), ('guitar', 'Guitar'), ('soundfx', 'Sound Fx')], default='unknown', help_text='Category of sound', max_length=16)),
                ('parameters', models.JSONField(help_text='Parameters for this specific sound')),
                ('recording', models.FilePathField(default=None, help_text='File path for recorded sources', max_length=512, null=True)),
                ('last_modified', models.DateTimeField(default=None, help_text='the date/time the file was modified', null=True)),
                ('record_date', models.DateTimeField(auto_now_add=True, help_text='the date/time the file was entered in the database')),
            ],
            options={
                'ordering': ['record_date'],
            },
        ),
        migrations.AddConstraint(
            model_name='soundgenerator',
            constraint=models.UniqueConstraint(fields=('name',), name='generator_name_unique'),
        ),
        migrations.AddConstraint(
            model_name='soundprocessor',
            constraint=models.UniqueConstraint(fields=('name',), name='processor_name_unique'),
        ),
        migrations.AddField(
            model_name='soundbite',
            name='processor',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='sounds.soundprocessor'),
        ),
        migrations.AddField(
            model_name='soundsource',
            name='generator',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='sounds.soundgenerator'),
        ),
        migrations.AddField(
            model_name='soundsource',
            name='tags',
            field=models.ManyToManyField(related_name='sounds', to='tags.tag'),
        ),
        migrations.AddField(
            model_name='soundbite',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sounds.soundsource'),
        ),
        migrations.AddIndex(
            model_name='soundsource',
            index=models.Index(fields=['record_date'], name='sounds_soun_record__475bc9_idx'),
        ),
        migrations.AddIndex(
            model_name='soundsource',
            index=models.Index(fields=['generator'], name='sounds_soun_generat_d9ca2b_idx'),
        ),
        migrations.AddIndex(
            model_name='soundsource',
            index=models.Index(fields=['type'], name='sounds_soun_type_d5a17c_idx'),
        ),
        migrations.AddIndex(
            model_name='soundsource',
            index=models.Index(fields=['nature'], name='sounds_soun_nature_935d49_idx'),
        ),
        migrations.AddConstraint(
            model_name='soundsource',
            constraint=models.UniqueConstraint(fields=('recording',), name='recording_is_unique'),
        ),
        migrations.AddConstraint(
            model_name='soundsource',
            constraint=models.UniqueConstraint(fields=('generator', 'parameters'), name='generator_parameters_is_unique'),
        ),
        migrations.AddIndex(
            model_name='soundbite',
            index=models.Index(fields=['record_date'], name='sounds_soun_record__7bf484_idx'),
        ),
        migrations.AddIndex(
            model_name='soundbite',
            index=models.Index(fields=['file_path'], name='sounds_soun_file_pa_123c0c_idx'),
        ),
    ]
